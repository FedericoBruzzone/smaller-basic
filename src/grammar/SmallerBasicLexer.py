# Generated from src/grammar/SmallerBasic.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,27,213,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,1,0,1,0,1,0,3,0,59,8,0,1,1,1,1,5,1,63,8,1,10,1,12,1,66,9,
        1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,3,2,79,8,2,1,3,1,3,
        1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,
        11,1,12,1,12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,15,1,
        15,1,15,1,15,3,15,114,8,15,1,16,1,16,1,16,1,16,5,16,120,8,16,10,
        16,12,16,123,9,16,1,17,3,17,126,8,17,1,17,1,17,5,17,130,8,17,10,
        17,12,17,133,9,17,1,17,3,17,136,8,17,1,18,3,18,139,8,18,1,18,1,18,
        5,18,143,8,18,10,18,12,18,146,9,18,1,18,3,18,149,8,18,1,18,1,18,
        4,18,153,8,18,11,18,12,18,154,1,18,3,18,158,8,18,1,19,1,19,3,19,
        162,8,19,1,19,4,19,165,8,19,11,19,12,19,166,1,20,1,20,3,20,171,8,
        20,1,21,1,21,1,22,1,22,1,23,4,23,178,8,23,11,23,12,23,179,1,23,1,
        23,1,24,1,24,1,24,1,24,5,24,188,8,24,10,24,12,24,191,9,24,1,24,1,
        24,1,24,1,24,1,24,1,25,3,25,199,8,25,1,25,1,25,1,26,1,26,1,26,1,
        26,5,26,207,8,26,10,26,12,26,210,9,26,1,26,1,26,1,189,0,27,1,1,3,
        2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,
        29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,
        51,26,53,27,1,0,7,3,0,0,31,34,34,127,127,1,0,49,57,2,0,69,69,101,
        101,1,0,48,57,2,0,65,90,97,122,3,0,9,10,13,13,32,32,2,0,10,10,13,
        13,240,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,
        0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,
        0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,
        0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,
        0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,
        0,0,51,1,0,0,0,0,53,1,0,0,0,1,58,1,0,0,0,3,60,1,0,0,0,5,78,1,0,0,
        0,7,80,1,0,0,0,9,82,1,0,0,0,11,84,1,0,0,0,13,86,1,0,0,0,15,88,1,
        0,0,0,17,90,1,0,0,0,19,92,1,0,0,0,21,94,1,0,0,0,23,96,1,0,0,0,25,
        98,1,0,0,0,27,101,1,0,0,0,29,104,1,0,0,0,31,113,1,0,0,0,33,115,1,
        0,0,0,35,125,1,0,0,0,37,138,1,0,0,0,39,159,1,0,0,0,41,170,1,0,0,
        0,43,172,1,0,0,0,45,174,1,0,0,0,47,177,1,0,0,0,49,183,1,0,0,0,51,
        198,1,0,0,0,53,202,1,0,0,0,55,59,3,35,17,0,56,59,3,37,18,0,57,59,
        5,48,0,0,58,55,1,0,0,0,58,56,1,0,0,0,58,57,1,0,0,0,59,2,1,0,0,0,
        60,64,5,34,0,0,61,63,8,0,0,0,62,61,1,0,0,0,63,66,1,0,0,0,64,62,1,
        0,0,0,64,65,1,0,0,0,65,67,1,0,0,0,66,64,1,0,0,0,67,68,5,34,0,0,68,
        4,1,0,0,0,69,70,5,116,0,0,70,71,5,114,0,0,71,72,5,117,0,0,72,79,
        5,101,0,0,73,74,5,102,0,0,74,75,5,97,0,0,75,76,5,108,0,0,76,77,5,
        115,0,0,77,79,5,101,0,0,78,69,1,0,0,0,78,73,1,0,0,0,79,6,1,0,0,0,
        80,81,5,40,0,0,81,8,1,0,0,0,82,83,5,41,0,0,83,10,1,0,0,0,84,85,5,
        43,0,0,85,12,1,0,0,0,86,87,5,45,0,0,87,14,1,0,0,0,88,89,5,42,0,0,
        89,16,1,0,0,0,90,91,5,47,0,0,91,18,1,0,0,0,92,93,5,62,0,0,93,20,
        1,0,0,0,94,95,5,60,0,0,95,22,1,0,0,0,96,97,5,61,0,0,97,24,1,0,0,
        0,98,99,5,62,0,0,99,100,5,61,0,0,100,26,1,0,0,0,101,102,5,60,0,0,
        102,103,5,61,0,0,103,28,1,0,0,0,104,105,5,60,0,0,105,106,5,62,0,
        0,106,30,1,0,0,0,107,114,3,19,9,0,108,114,3,21,10,0,109,114,3,23,
        11,0,110,114,3,25,12,0,111,114,3,27,13,0,112,114,3,29,14,0,113,107,
        1,0,0,0,113,108,1,0,0,0,113,109,1,0,0,0,113,110,1,0,0,0,113,111,
        1,0,0,0,113,112,1,0,0,0,114,32,1,0,0,0,115,121,3,45,22,0,116,120,
        3,45,22,0,117,120,3,43,21,0,118,120,5,95,0,0,119,116,1,0,0,0,119,
        117,1,0,0,0,119,118,1,0,0,0,120,123,1,0,0,0,121,119,1,0,0,0,121,
        122,1,0,0,0,122,34,1,0,0,0,123,121,1,0,0,0,124,126,3,41,20,0,125,
        124,1,0,0,0,125,126,1,0,0,0,126,127,1,0,0,0,127,131,7,1,0,0,128,
        130,3,43,21,0,129,128,1,0,0,0,130,133,1,0,0,0,131,129,1,0,0,0,131,
        132,1,0,0,0,132,135,1,0,0,0,133,131,1,0,0,0,134,136,3,39,19,0,135,
        134,1,0,0,0,135,136,1,0,0,0,136,36,1,0,0,0,137,139,3,41,20,0,138,
        137,1,0,0,0,138,139,1,0,0,0,139,148,1,0,0,0,140,144,7,1,0,0,141,
        143,3,43,21,0,142,141,1,0,0,0,143,146,1,0,0,0,144,142,1,0,0,0,144,
        145,1,0,0,0,145,149,1,0,0,0,146,144,1,0,0,0,147,149,5,48,0,0,148,
        140,1,0,0,0,148,147,1,0,0,0,148,149,1,0,0,0,149,150,1,0,0,0,150,
        152,5,46,0,0,151,153,3,43,21,0,152,151,1,0,0,0,153,154,1,0,0,0,154,
        152,1,0,0,0,154,155,1,0,0,0,155,157,1,0,0,0,156,158,3,39,19,0,157,
        156,1,0,0,0,157,158,1,0,0,0,158,38,1,0,0,0,159,161,7,2,0,0,160,162,
        3,41,20,0,161,160,1,0,0,0,161,162,1,0,0,0,162,164,1,0,0,0,163,165,
        3,43,21,0,164,163,1,0,0,0,165,166,1,0,0,0,166,164,1,0,0,0,166,167,
        1,0,0,0,167,40,1,0,0,0,168,171,3,11,5,0,169,171,3,13,6,0,170,168,
        1,0,0,0,170,169,1,0,0,0,171,42,1,0,0,0,172,173,7,3,0,0,173,44,1,
        0,0,0,174,175,7,4,0,0,175,46,1,0,0,0,176,178,7,5,0,0,177,176,1,0,
        0,0,178,179,1,0,0,0,179,177,1,0,0,0,179,180,1,0,0,0,180,181,1,0,
        0,0,181,182,6,23,0,0,182,48,1,0,0,0,183,184,5,47,0,0,184,185,5,42,
        0,0,185,189,1,0,0,0,186,188,9,0,0,0,187,186,1,0,0,0,188,191,1,0,
        0,0,189,190,1,0,0,0,189,187,1,0,0,0,190,192,1,0,0,0,191,189,1,0,
        0,0,192,193,5,42,0,0,193,194,5,47,0,0,194,195,1,0,0,0,195,196,6,
        24,0,0,196,50,1,0,0,0,197,199,5,13,0,0,198,197,1,0,0,0,198,199,1,
        0,0,0,199,200,1,0,0,0,200,201,5,10,0,0,201,52,1,0,0,0,202,203,5,
        47,0,0,203,204,5,47,0,0,204,208,1,0,0,0,205,207,8,6,0,0,206,205,
        1,0,0,0,207,210,1,0,0,0,208,206,1,0,0,0,208,209,1,0,0,0,209,211,
        1,0,0,0,210,208,1,0,0,0,211,212,6,26,0,0,212,54,1,0,0,0,22,0,58,
        64,78,113,119,121,125,131,135,138,144,148,154,157,161,166,170,179,
        189,198,208,1,6,0,0
    ]

class SmallerBasicLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    NUMBER_LITERAL = 1
    STRING_LITERAL = 2
    BOOLEAN_LITERAL = 3
    LPAREN = 4
    RPAREN = 5
    PLUS = 6
    MINUS = 7
    MUL = 8
    DIV = 9
    GT = 10
    LT = 11
    EQ = 12
    GTEQ = 13
    LTEQ = 14
    NEQ = 15
    RELATIONAL_OPERATOR = 16
    ID = 17
    INT = 18
    FLOAT = 19
    EXPONENT = 20
    SIGN = 21
    NUM = 22
    CHAR = 23
    WS = 24
    COMMENT = 25
    NEWLINE = 26
    LINE_COMMENT = 27

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'+'", "'-'", "'*'", "'/'", "'>'", "'<'", "'='", 
            "'>='", "'<='", "'<>'" ]

    symbolicNames = [ "<INVALID>",
            "NUMBER_LITERAL", "STRING_LITERAL", "BOOLEAN_LITERAL", "LPAREN", 
            "RPAREN", "PLUS", "MINUS", "MUL", "DIV", "GT", "LT", "EQ", "GTEQ", 
            "LTEQ", "NEQ", "RELATIONAL_OPERATOR", "ID", "INT", "FLOAT", 
            "EXPONENT", "SIGN", "NUM", "CHAR", "WS", "COMMENT", "NEWLINE", 
            "LINE_COMMENT" ]

    ruleNames = [ "NUMBER_LITERAL", "STRING_LITERAL", "BOOLEAN_LITERAL", 
                  "LPAREN", "RPAREN", "PLUS", "MINUS", "MUL", "DIV", "GT", 
                  "LT", "EQ", "GTEQ", "LTEQ", "NEQ", "RELATIONAL_OPERATOR", 
                  "ID", "INT", "FLOAT", "EXPONENT", "SIGN", "NUM", "CHAR", 
                  "WS", "COMMENT", "NEWLINE", "LINE_COMMENT" ]

    grammarFileName = "SmallerBasic.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


